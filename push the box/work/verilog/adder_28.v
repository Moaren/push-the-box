/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_28 (
    input [5:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] out,
    output reg z,
    output reg v,
    output reg n,
    output reg overflow
  );
  
  
  
  reg [15:0] sub;
  
  reg [15:0] temp_out;
  
  always @* begin
    z = 1'h0;
    v = 1'h0;
    n = 1'h0;
    
    case (alufn[0+1-:2])
      2'h0: begin
        temp_out = a + b;
      end
      2'h1: begin
        temp_out = a - b;
      end
      2'h2: begin
        temp_out = a * b;
      end
      2'h3: begin
        temp_out = a - ((a / b) * b);
      end
      default: begin
        temp_out = a + b;
      end
    endcase
    sub = a - b;
    z = (~|sub);
    v = (a[15+0-:1] & ~b[15+0-:1] & (~sub[15+0-:1])) | ((~a[15+0-:1]) & (b[15+0-:1]) & sub[15+0-:1]);
    n = sub[15+0-:1];
    out = temp_out;
    overflow = ((a[15+0-:1]) & (b[15+0-:1]) & (~temp_out[15+0-:1])) | ((~a[15+0-:1]) & (~b[15+0-:1]) & (temp_out[15+0-:1]));
  end
endmodule
